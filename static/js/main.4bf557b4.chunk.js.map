{"version":3,"sources":["assets/cronometro.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","numero","botao","timer","vai","bind","limpar","this","clearInterval","setInterval","setState","className","src","cronometro","toFixed","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,MAA0B,uC,eC6D1BA,E,kDAvDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,EACRC,MAAM,OAER,EAAKC,MAAM,KACX,EAAKC,IAAK,EAAKA,IAAIC,KAAT,gBACV,EAAKC,OAAQ,EAAKA,OAAOD,KAAZ,gBARG,E,uCAUlB,WAAM,IAAD,OACCL,EAAQO,KAAKP,MAEC,OAAfO,KAAKJ,OACNK,cAAcD,KAAKJ,OACnBI,KAAKJ,MAAQ,KACbH,EAAME,MAAQ,QAEdK,KAAKJ,MAAQM,aAAY,WACvB,IAAIT,EAAQ,EAAKA,MACjBA,EAAMC,QAAU,GAChB,EAAKS,SAASV,KACd,KACFA,EAAME,MAAQ,UAGhBK,KAAKG,SAASV,K,oBAGhB,WACoB,OAAfO,KAAKJ,QACNK,cAAcD,KAAKJ,OACnBI,KAAKJ,MAAQ,MAEf,IAAIH,EAAQO,KAAKP,MACjBA,EAAME,MAAQ,MACdF,EAAMC,OAAS,EACfM,KAAKG,SAASV,K,oBAGhB,WACE,OACE,sBAAKW,UAAU,YAAf,UACE,qBAAKC,IAAKC,EAAYF,UAAU,QAChC,mBAAGA,UAAU,QAAb,SAAsBJ,KAAKP,MAAMC,OAAOa,QAAQ,KAChD,sBAAKH,UAAU,UAAf,UACE,mBAAGA,UAAU,QAAQI,QAASR,KAAKH,IAAnC,SAAyCG,KAAKP,MAAME,QACpD,mBAAGS,UAAU,QAAQI,QAASR,KAAKD,OAAnC,6B,GAhDQU,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bf557b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cronometro.910ec1f0.png\";","import React,{Component} from 'react';\n// Importando a imagem do cronometro\nimport cronometro from './assets/cronometro.png'; \nimport './style.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      numero: 0,\n      botao:'VAI'\n    };\n    this.timer=null;\n    this.vai= this.vai.bind(this);\n    this.limpar= this.limpar.bind(this);\n  }\n  vai(){\n    let state = this.state;\n\n    if(this.timer !== null){\n      clearInterval(this.timer);\n      this.timer = null;\n      state.botao = 'VAI';\n    }else{\n      this.timer = setInterval(()=>{\n        let state = this.state;\n        state.numero += 0.1;\n        this.setState(state);\n      },100);\n      state.botao = 'PAUSAR';\n    }\n\n    this.setState(state);\n  }\n\n  limpar(){\n    if(this.timer !== null){\n      clearInterval(this.timer);\n      this.timer = null;      \n    }\n    let state = this.state;\n    state.botao = 'VAI';\n    state.numero = 0;\n    this.setState(state);\n\n  }\n  render(){\n    return (\n      <div className=\"container\">\n        <img src={cronometro} className=\"img\"></img>\n        <a className=\"timer\">{this.state.numero.toFixed(1)}</a>\n        <div className=\"areaBtn\">\n          <a className=\"botao\" onClick={this.vai}>{this.state.botao}</a>\n          <a className=\"botao\" onClick={this.limpar}>Limpa</a>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}